{"version":3,"sources":["webpack:///../theme/src/components/layout.js","webpack:///../theme/src/components/coverflow.js","webpack:///../theme/src/templates/coverflow.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Body","Object","styled_base_browser_esm","target","props","colors","backdrop","Layout","_ref","children","site","_1019946411","data","core_browser_esm","react_default","a","Fragment","Helmet_default","title","siteMetadata","htmlAttributes","lang","KeyboardBoundSwipeableViews","bindKeyboard","SwipeableViews","name","styles","AnimatedDiv","Animated","div","handleChangeIndex","location","position","index","pathname","prefix","withPrefix","startsWith","substr","length","navigate","spring","toValue","start","handleSwitch","setPosition","setValue","handleKeyDown","event","keycode","key","match","window","CoverFlow","_useState","useState","Value","es","_ref2","Math","min","max","isNaN","parseInt","hash","substring","_value","react_event_listener_cjs_default","onKeyDown","enableMouseEvents","onChangeIndex","onSwitching","style","assign","opacity","transform","scale","translateX","zIndex","map","child","currentIndex","inputRange","_","i","interpolate","outputRange","onClick","e","tagName","CoverItem","cover","text","PageTemplate","pageContext","layout","coverflow","allCoverPages","edges","node","guid","link","gatsby_browser_entry","to","href","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","_objectSpread","json"],"mappings":"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","file":"component---theme-src-templates-coverflow-js-4e3a10faa6692b900cec.js","sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport styled from '@emotion/styled';\n\nconst Body = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: ${props => (props.colors && props.colors.backdrop) || '#333'};\n`;\n\nconst Layout = ({ children, colors }) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Helmet title={site.siteMetadata.title} htmlAttributes={{ lang: 'en' }} />\n      <Body colors={colors}>{children}</Body>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport Animated from 'animated/lib/targets/react-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport EventListener from 'react-event-listener';\nimport keycode from 'keycode';\nimport { Location } from '@reach/router';\nimport { navigate, withPrefix } from 'gatsby';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport styled from '@emotion/styled';\n\nconst KeyboardBoundSwipeableViews = styled(bindKeyboard(SwipeableViews))`\n  @media (max-aspect-ratio: 1/1) {\n    padding: calc((100vh - 80vw) * 0.5) 10vw;\n  }\n\n  @media (min-aspect-ratio: 1/1) {\n    padding: 10vh calc((100vw - 80vh) * 0.5);\n  }\n\n  overflow-y: hidden;\n\n  .react-swipeable-view-container {\n    overflow-x: visible;\n    overflow-y: visible;\n    [data-swipeable='true'] {\n      overflow-x: visible !important;\n      overflow-y: visible !important;\n    }\n  }\n`;\n\nconst AnimatedDiv = styled(Animated.div)`\n  height: 80vh;\n  width: 80vh;\n  max-height: 80vw;\n  max-width: 80vw;\n  position: relative;\n  overflow-y: hidden;\n  overflow-x: hidden;\n`;\n\nconst handleChangeIndex = (location, position) => index => {\n  let pathname = location.pathname;\n  let prefix = withPrefix('/');\n  if (pathname.startsWith(prefix)) {\n    pathname = pathname.substr(prefix.length);\n  }\n  navigate(`${pathname}#${index}`);\n  Animated.spring(position, { toValue: index }).start();\n};\n\nconst handleSwitch = (position, setPosition) => index => {\n  position.setValue(index);\n  setPosition(position);\n};\n\nconst handleKeyDown = (index, children) => event => {\n  if (keycode(event) === 'enter') {\n    if (children[index].key.match(/^\\//)) {\n      navigate(children[index].key);\n    } else {\n      window.location = children[index].key;\n    }\n  }\n};\n\nconst CoverFlow = ({ children }) => {\n  const [position, setPosition] = useState(new Animated.Value(0));\n  return (\n    <Location>\n      {({ location }) => {\n        let index = Math.min(\n          Math.max(\n            0,\n            isNaN(parseInt(location.hash.substring(1), 10))\n              ? 0\n              : parseInt(location.hash.substring(1))\n          ),\n          children.length\n        );\n        let key = \"default\";\n        if (position._value === 0 && index) {\n          key = \"loading\";\n          handleSwitch(position, setPosition)(index);\n          handleChangeIndex(location, position)(index);\n        }\n        return (\n          <EventListener\n            key={key}\n            target=\"window\"\n            onKeyDown={handleKeyDown(index, children)}\n          >\n            <KeyboardBoundSwipeableViews\n              index={index}\n              enableMouseEvents={true}\n              onChangeIndex={handleChangeIndex(location, position)}\n              onSwitching={handleSwitch(position, setPosition)}\n            >\n              {children.length < 1 ? (\n                <></>\n              ) : children.length === 1 ? (\n                <AnimatedDiv\n                  key=\"0\"\n                  style={Object.assign({\n                    opacity: '1',\n                    transform: [{ scale: 1 }, { translateX: '0%' }],\n                    zIndex: 1,\n                  })}\n                >\n                  {children[0]}\n                </AnimatedDiv>\n              ) : (\n                children.map((child, currentIndex) => {\n                  const inputRange = children.map((_, i) => i);\n                  const scale = position.interpolate({\n                    inputRange,\n                    outputRange: inputRange.map(i => {\n                      return currentIndex === i ? 1 : 0.7;\n                    }),\n                  });\n                  const opacity = position.interpolate({\n                    inputRange,\n                    outputRange: inputRange.map(i => {\n                      return currentIndex === i ? 1 : 0.3;\n                    }),\n                  });\n                  const translateX = position.interpolate({\n                    inputRange,\n                    outputRange: inputRange.map(i => {\n                      return (100 / 2) * (i - currentIndex);\n                    }),\n                  });\n                  return (\n                    <AnimatedDiv\n                      key={child.key}\n                      style={Object.assign({\n                        opacity,\n                        transform: [{ scale }, { translateX }],\n                        zIndex: index === currentIndex ? 1 : null,\n                      })}\n                      onClick={e => {\n                        if (e.target.tagName !== 'A') {\n                          handleChangeIndex(location, position)(currentIndex);\n                        }\n                      }}\n                    >\n                      {child}\n                    </AnimatedDiv>\n                  );\n                })\n              )}\n            </KeyboardBoundSwipeableViews>\n          </EventListener>\n        );\n      }}\n    </Location>\n  );\n};\n\nexport default CoverFlow;\n\nexport const CoverItem = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n\n  overflow-y: hidden;\n  overflow-x: hidden;\n\n  font-family: sans-serif;\n  font-size: 2vw;\n  padding: 2vw;\n\n  background: ${props => (props.colors && props.colors.cover) || '#663399'};\n\n  h1 {\n    font-size: 4vh;\n    text-align: center;\n    hyphens: auto;\n  }\n\n  a {\n    color: ${props => (props.colors && props.colors.text) || '#fff'};\n    text-decoration: none;\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                       supported by Chrome and Opera */\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport { CoverItem } from '../components/coverflow';\nimport CoverFlow from '../components/coverflow';\nimport { Link } from 'gatsby';\n\nconst PageTemplate = ({ pageContext }) => (\n  <Layout colors={pageContext.colors}>\n    <CoverFlow>\n      {pageContext.allCoverPages.edges.map(({ node }) => (\n        <CoverItem key={node.guid || node.link} colors={pageContext.colors}>\n          <h1>\n            {node.link.match(/^\\//) ? (\n              <Link to={node.link}>{node.title}</Link>\n            ) : (\n              <a href={node.link}>{node.title}</a>\n            )}\n          </h1>\n        </CoverItem>\n      ))}\n    </CoverFlow>\n  </Layout>\n);\n\nexport default PageTemplate;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}